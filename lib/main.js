// Generated by CoffeeScript 2.5.1
var STANDARD_ELEMENTS, element, fragment, i, isString, len, name, tags, wrap;

import React from 'react';

fragment = function(children) {
  var child, elements;
  elements = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = children.length; i < len; i++) {
      child = children[i];
      if (React.isValidElement(child)) {
        results.push(child);
      } else {
        console.log(child);
        results.push(console.error("What to do with the above object?"));
      }
    }
    return results;
  })();
  return React.createElement(React.Fragment, null, ...elements);
};

isString = function(object) {
  return (typeof object === 'string') || (object instanceof String);
};

element = function() {
  var component, content, props, second;
  switch (arguments.length) {
    case 1:
      component = arguments[0];
      return React.createElement(component);
    case 2:
      [component, second] = arguments;
      props = isString(second) ? {
        children: second
      } : second;
      return React.createElement(component, props);
    case 3:
      [component, props, content] = arguments;
      return React.createElement(component, props, content);
    default:
      console.log(arguments);
      return console.error('What to do with the above arguments?');
  }
};

wrap = function(component) {
  return function(...args) {
    return element(component, ...args);
  };
};

STANDARD_ELEMENTS = ['div', 'button'];

tags = {};

for (i = 0, len = STANDARD_ELEMENTS.length; i < len; i++) {
  name = STANDARD_ELEMENTS[i];
  tags[name] = wrap(name);
}

export default {wrap, element, fragment, tags};
